#
#### Script that Compiles modified subroutines and makes an IIE executable
#
#
chmod a+w *mod *.o
rm *mod *.o
cp ../ORIG/*mod .
chmod a+w *mod *.o

ln -s ../ORIG/*.o .

rm MSIS.o
#rm MSIS86.o
rm MSIS.mod
rm MSIS86.mod


#####   -c flag   : Compile only, do not procude executable
#####   -o flag   : Specify name of object, library, or executable file to write (-o filename)
#####   -O2 flag  : Enables basic block level optimizations.
#####   -pg       : allows linking for the GPROF profiler
#####
#####  -std=legacy 
###             Specify the standard to which the program is expected to conform, 
###             which may be one of ‘f95’, ‘f2003’, ‘f2008’, ‘f2018’, ‘gnu’, or ‘legacy’.
###             The default value for std is ‘gnu’, which specifies a superset of the latest Fortran
###             standard that includes all of the extensions supported by GNU Fortran, although 
###             warnings will be given for obsolete extensions not recommended for use in new code.
###             The ‘legacy’ value is equivalent but without the warnings for 
###             obsolete extensions, and may be useful for old non-standard programs.
##### -fdefault-integer-8 
###             Set the default integer and logical types to an 8 byte wide type.
###             This option also affects the kind of integer constants like 42. 
###             Unlike -finteger-4-integer-8, it does not promote variables with explicit kind declaration.
#####  -fcray-pointer 
###             Enable the Cray pointer extension, which provides C-like pointer functionality.
#####  -llapack and -lblas
###             LAPACK (Linear Algebra PACKage) is a FORTRAN program system for solving linear equations for
###             matrices which fit entirely in core. Links to LAPACK and its associated BLAS (Basic Linear Algebra Subroutines)  


#Compile the MSIS2  subroutines:
gfortran -c -O2 -pg alt2gph.F90 msis_constants.F90 msis_init.F90 msis_gfn.F90 msis_tfn.F90 msis_dfn.F90 msis_calc.F90 msis_gtd8d.F90>err3 2> err_msis2 -pg
# gfortran -c -O2 -pg alt2gph.F90 msis_constants.F90 msis_init.F90 msis_gfn.F90 msis_tfn.F90 msis_dfn.F90 msis_calc.F90 msis_gtd8d.F90 -pg

#Compile the MSIS00 Subroutines:
gfortran -c -pg -O2 utils_constants.F90 utils_spline.F90 physics_constants.F90 physics_msis.F90>err1 2> err_msis00 -pg
# gfortran -c -pg -O2 utils_constants.F90 utils_spline.F90 physics_constants.F90 physics_msis.F90 -pg


# Compile jb2008 subroutines:
gfortran -c -pg -std=legacy -fcray-pointer -O2 *.for>err0_jb2008 2>err1_jb2008 -pg
# gfortran -c -pg -std=legacy -fcray-pointer -O2 *.for>err0_jb2008 -pg


# Compile ALL other subroutines:
gfortran -c -pg -std=legacy -fdefault-integer-8 -fcray-pointer -O2 *.f90>err 2>err_orig -pg
# gfortran -c -pg -std=legacy -fdefault-integer-8 -fcray-pointer -O2 *.f90 -pg


#ln -s ../ORIG/*.o .
gfortran *.o -pg -o giie2002_gfortran -llapack -lblas -pg
#rm *mod *.o
rm *.o



### Concatenate all the error files into a single one.
cat err3 err_msis2 err1 err_msis00 err0_jb2008 err1_jb2008 err err_orig > AllErrors

### remove the excess files. 
rm err3 err_msis2 err1 err_msis00 err0_jb2008 err1_jb2008 err err_orig
